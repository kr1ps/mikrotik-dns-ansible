---
- name: Delete Extra Static DNS Records from MikroTik Router
  hosts: mikrotik_router
  gather_facts: no
  vars:
    static_records_file: "./static_records.yml"

  tasks:

    - name: Load Desired Static DNS Records
      include_vars:
        file: "{{ static_records_file }}"
        name: desired_records

    - name: Fetch Current Static DNS Records from Router
      community.routeros.command:
        commands:
          - /ip dns static print
      register: dns_records_raw

    - name: Initialize Parsed DNS Records List
      set_fact:
        current_dns_parsed: []

    - name: Parse Current DNS Record Lines
      set_fact:
        current_dns_parsed: "{{ current_dns_parsed + [ dns_record ] }}"
      vars:
        parts: "{{ item.split() }}"
        dns_record: >-
          {{
            {
              'name': parts[1],
              'address': ('' if parts[2] == 'CNAME' else parts[3]),
              'ttl': (parts[3] if parts[2] == 'CNAME' else parts[4]),
              'type': parts[2]
            }
          }}
      loop: "{{ dns_records_raw.stdout_lines[0] }}"
      when:
        - not (item.startswith('Columns:') or item.startswith('#') or item.startswith(';;;'))
        - item.strip() != ''

    - name: Display Parsed Current DNS Records (Optional)
      debug:
        var: current_dns_parsed

    - name: Identify Extra DNS Records to Delete
      set_fact:
        records_to_delete: >-
          {{
            current_dns_parsed
            | rejectattr('name', 'in', desired_records.static_records | map(attribute='name') | list)
            | list
          }}

    - name: Display DNS Records to Delete (Optional)
      debug:
        msg: "Deleting DNS Record: {{ item.name }}, Type: {{ item.type }}, Address: {{ item.address }}, TTL: {{ item.ttl }}"
      loop: "{{ records_to_delete }}"

    - name: Delete Extra DNS Records from Router
      community.routeros.command:
        commands:
          - "/ip dns static remove [find name=\"{{ item.name }}\"]"
      loop: "{{ records_to_delete }}"
      when: records_to_delete | length > 0
      register: delete_results
